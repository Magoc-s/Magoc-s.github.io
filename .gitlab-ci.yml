image: docker.io/anucecsit/anu-jekyll-build:v2.2.0

variables:
  STAGING_DIR: /srv/gitlab-ce-pages/staging
  BUILD_DIR: $STAGING_DIR/$CI_PIPELINE_ID/$CI_BUILD_REF_NAME/$CI_PROJECT_PATH
  DEPLOY_DIR: $STAGING_DIR/$CI_BUILD_ID/$CI_BUILD_REF_NAME

# # this step taken from https://docs.gitlab.com/ee/ci/ssh_keys/
# before_script:
#   ##
#   ## Install ssh-agent if not already installed, it is required by Docker.
#   ## (change apt-get to yum if you use an RPM-based image)
#   ##
#   - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'

#   ##
#   ## Run ssh-agent (inside the build environment)
#   ##
#   - eval $(ssh-agent -s)

#   ##
#   ## Add the SSH key stored in JEKYLL_THEME_READ_ONLY_KEY variable to the agent store
#   ## We're using tr to fix line endings which makes ed25519 keys work
#   ## without extra base64 encoding.
#   ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
#   ##
#   - echo "$JEKYLL_THEME_READ_ONLY_KEY" | tr -d '\r' | ssh-add -

#   ##
#   ## Create the SSH directory and give it the right permissions
#   ##
#   - mkdir -p ~/.ssh
#   - chmod 700 ~/.ssh
#   - ssh-keyscan -t rsa gitlab.anu.edu.au >> ~/.ssh/known_hosts

# page-build:
#   tags:
#     - Pages
#   stage: build
#   script:
#     - bundle install
#     - bundle exec jekyll build -d $BUILD_DIR
#   only:
#     - master

# page-deploy:
#   tags:
#   - Pages
#   stage: deploy
#   script:
#     - mkdir -p $DEPLOY_DIR/`dirname $CI_PROJECT_PATH`
#     - mv $BUILD_DIR $DEPLOY_DIR/$CI_PROJECT_PATH
#     - rm -rf $STAGING_DIR/$CI_PIPELINE_ID
#   only:
#     - master

before_script:
  # Git and SSH setup to clone private repos
  # Needs the deploykey file to be installed in all dependent repositories
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
  # Add gitlab to known_hosts
  - mkdir -p ~/.ssh && chmod 700 ~/.ssh
  - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
  # Start the ssh agent and add the deploykey
  #- echo "$ssh_private_key"
  #- echo $ssh_private_key > deploykey
  #- chmod 400 deploykey
  - eval $(ssh-agent -s)
  #- ssh-add deploykey
  #- echo -n $ssh_private_key | tr -d '\r' | ssh-add -
  - echo "$ssh_private_key" | base64 --decode | ssh-add -
  - apt-get install -y git

# gh-pages-build:
#   tags:
#     - Pages
#   stage: GitHub Pages Build
#   script:
#     - bundle install
#     - bundle exec jekyll build -d ./docs
#   only:
#     - master

gh-pages-deploy:
  tags:
    - Pages
  stage: deploy
  script:
    - bundle install
    - bundle exec jekyll build -d ./docs
    - git remote add deploy git@github.com:Magoc-s/magoc-s.github.io.git
    - git add docs/
    - git commit -m "new deploy"
    - git fetch deploy
    - git push deploy master -f
  only:
    - master
